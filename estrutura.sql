REM   Script: Gestão de Hotéis e Restaurantes - DDL
REM   Script DDL responsável por implementar as estruturas do banco de dados de uma gestão de hotéis e restaurantes.

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_ITENS_PEDIDO CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_PEDIDOS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_RESERVAS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_QUARTOS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_CLIENTES CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

CREATE TABLE USR_GESTAO_HOTEL_CLIENTES ( 
    CLIENTE_ID NUMBER NOT NULL, 
    NOME VARCHAR2(100) NOT NULL, 
    EMAIL VARCHAR2(100), 
    TELEFONE VARCHAR2(15), 
    CONSTRAINT PK_CLIENTES PRIMARY KEY (CLIENTE_ID) 
);

CREATE TABLE USR_GESTAO_HOTEL_QUARTOS ( 
    QUARTO_ID NUMBER NOT NULL, 
    NUMERO VARCHAR2(10) NOT NULL, 
    TIPO VARCHAR2(50), 
    PRECO_DIARIA NUMBER(10, 2), 
    CONSTRAINT PK_QUARTOS PRIMARY KEY (QUARTO_ID), 
    CONSTRAINT CH_PRECO_DIARIA CHECK (PRECO_DIARIA > 0) 
);

CREATE TABLE USR_GESTAO_HOTEL_RESERVAS ( 
    RESERVA_ID NUMBER NOT NULL, 
    CLIENTE_ID NUMBER NOT NULL, 
    QUARTO_ID NUMBER NOT NULL, 
    DATA_CHECKIN DATE NOT NULL, 
    DATA_CHECKOUT DATE NOT NULL, 
    STATUS VARCHAR2(50), 
    CONSTRAINT PK_RESERVAS PRIMARY KEY (RESERVA_ID), 
    CONSTRAINT FK_RESERVAS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL_CLIENTES(CLIENTE_ID), 
    CONSTRAINT FK_RESERVAS_QUARTO FOREIGN KEY (QUARTO_ID) REFERENCES USR_GESTAO_HOTEL_QUARTOS(QUARTO_ID), 
    CONSTRAINT CH_RESERVA_CHECKOUT CHECK (DATA_CHECKOUT > DATA_CHECKIN) 
);

CREATE TABLE USR_GESTAO_HOTEL_PEDIDOS ( 
    PEDIDO_ID NUMBER NOT NULL, 
    CLIENTE_ID NUMBER NOT NULL, 
    DATA_PEDIDO TIMESTAMP NOT NULL, 
    TOTAL NUMBER(10, 2), 
    STATUS VARCHAR2(50), 
    CONSTRAINT PK_PEDIDOS PRIMARY KEY (PEDIDO_ID), 
    CONSTRAINT FK_PEDIDOS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL_CLIENTES(CLIENTE_ID), 
    CONSTRAINT CH_PEDIDOS_TOTAL CHECK (TOTAL > 0) 
);

CREATE TABLE USR_GESTAO_HOTEL_ITENS_PEDIDO ( 
    ITEM_PEDIDO_ID NUMBER NOT NULL, 
    PEDIDO_ID NUMBER NOT NULL, 
    NOME_ITEM VARCHAR2(100), 
    QUANTIDADE NUMBER NOT NULL, 
    PRECO_UNITARIO NUMBER(10, 2) NOT NULL, 
    CONSTRAINT PK_ITENS_PEDIDO PRIMARY KEY (ITEM_PEDIDO_ID), 
    CONSTRAINT FK_ITENS_PEDIDO FOREIGN KEY (PEDIDO_ID) REFERENCES USR_GESTAO_HOTEL_PEDIDOS(PEDIDO_ID), 
    CONSTRAINT CH_QUANTIDADE CHECK (QUANTIDADE > 0), 
    CONSTRAINT CH_PRECO_UNITARIO CHECK (PRECO_UNITARIO > 0) 
);

CREATE INDEX IDX_CLIENTES_EMAIL ON USR_GESTAO_HOTEL_CLIENTES (EMAIL);

CREATE INDEX IDX_RESERVAS_STATUS ON USR_GESTAO_HOTEL_RESERVAS (STATUS);

CREATE INDEX IDX_PEDIDOS_STATUS ON USR_GESTAO_HOTEL_PEDIDOS (STATUS);

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_ITENS_PEDIDO CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_PEDIDOS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_RESERVAS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_QUARTOS CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

BEGIN 
   EXECUTE IMMEDIATE 'DROP TABLE USR_GESTAO_HOTEL_CLIENTES CASCADE CONSTRAINTS'; 
EXCEPTION 
   WHEN OTHERS THEN NULL; 
END; 
/

CREATE TABLE USR_GESTAO_HOTEL_CLIENTES ( 
    CLIENTE_ID NUMBER NOT NULL, 
    NOME VARCHAR2(100) NOT NULL, 
    EMAIL VARCHAR2(100), 
    TELEFONE VARCHAR2(15), 
    CONSTRAINT PK_CLIENTES PRIMARY KEY (CLIENTE_ID) 
);

CREATE TABLE USR_GESTAO_HOTEL_QUARTOS ( 
    QUARTO_ID NUMBER NOT NULL, 
    NUMERO VARCHAR2(10) NOT NULL, 
    TIPO VARCHAR2(50), 
    PRECO_DIARIA NUMBER(10, 2), 
    CONSTRAINT PK_QUARTOS PRIMARY KEY (QUARTO_ID), 
    CONSTRAINT CH_PRECO_DIARIA CHECK (PRECO_DIARIA > 0) 
);

CREATE TABLE USR_GESTAO_HOTEL_RESERVAS ( 
    RESERVA_ID NUMBER NOT NULL, 
    CLIENTE_ID NUMBER NOT NULL, 
    QUARTO_ID NUMBER NOT NULL, 
    DATA_CHECKIN DATE NOT NULL, 
    DATA_CHECKOUT DATE NOT NULL, 
    STATUS VARCHAR2(50), 
    CONSTRAINT PK_RESERVAS PRIMARY KEY (RESERVA_ID), 
    CONSTRAINT FK_RESERVAS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL_CLIENTES(CLIENTE_ID), 
    CONSTRAINT FK_RESERVAS_QUARTO FOREIGN KEY (QUARTO_ID) REFERENCES USR_GESTAO_HOTEL_QUARTOS(QUARTO_ID), 
    CONSTRAINT CH_RESERVA_CHECKOUT CHECK (DATA_CHECKOUT > DATA_CHECKIN) 
);

CREATE TABLE USR_GESTAO_HOTEL_PEDIDOS ( 
    PEDIDO_ID NUMBER NOT NULL, 
    CLIENTE_ID NUMBER NOT NULL, 
    DATA_PEDIDO TIMESTAMP NOT NULL, 
    TOTAL NUMBER(10, 2), 
    STATUS VARCHAR2(50), 
    CONSTRAINT PK_PEDIDOS PRIMARY KEY (PEDIDO_ID), 
    CONSTRAINT FK_PEDIDOS_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES USR_GESTAO_HOTEL_CLIENTES(CLIENTE_ID), 
    CONSTRAINT CH_PEDIDOS_TOTAL CHECK (TOTAL > 0) 
);

CREATE TABLE USR_GESTAO_HOTEL_ITENS_PEDIDO ( 
    ITEM_PEDIDO_ID NUMBER NOT NULL, 
    PEDIDO_ID NUMBER NOT NULL, 
    NOME_ITEM VARCHAR2(100), 
    QUANTIDADE NUMBER NOT NULL, 
    PRECO_UNITARIO NUMBER(10, 2) NOT NULL, 
    CONSTRAINT PK_ITENS_PEDIDO PRIMARY KEY (ITEM_PEDIDO_ID), 
    CONSTRAINT FK_ITENS_PEDIDO FOREIGN KEY (PEDIDO_ID) REFERENCES USR_GESTAO_HOTEL_PEDIDOS(PEDIDO_ID), 
    CONSTRAINT CH_QUANTIDADE CHECK (QUANTIDADE > 0), 
    CONSTRAINT CH_PRECO_UNITARIO CHECK (PRECO_UNITARIO > 0) 
);

CREATE INDEX IDX_CLIENTES_EMAIL ON USR_GESTAO_HOTEL_CLIENTES (EMAIL);

CREATE INDEX IDX_RESERVAS_STATUS ON USR_GESTAO_HOTEL_RESERVAS (STATUS);

CREATE INDEX IDX_PEDIDOS_STATUS ON USR_GESTAO_HOTEL_PEDIDOS (STATUS);

